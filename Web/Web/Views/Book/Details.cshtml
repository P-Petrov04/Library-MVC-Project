@model dynamic
@{
    ViewData["Title"] = Model.Title;
}

@if (TempData["Error"] != null)
{
    <p class="text-danger">@TempData["Error"]</p>
}

@if (TempData["Success"] != null)
{
    <p class="text-success">@TempData["Success"]</p>
}

<div id="book-details" class="container-fluid body-content">
    <!-- Flex Container for Image and Details -->
    <div class="row">
        <!-- Book Cover Section -->
        <div class="col-md-4">
            <div class="book-details-card">
                @if (!string.IsNullOrEmpty(Model.CoverImagePath))
                {
                    <img src="~/images/@Model.CoverImagePath" class="book-details-img" alt="Book Cover" />
                }
                else
                {
                    <img src="~/images/default.png" class="book-details-img" alt="Default Cover" />
                }
            </div>
        </div>
        <!-- Book Details Section -->
        <div class="col-md-4">
            <div class="book-details-info">
                <h1 class="details-title">@Model.Title</h1>
                <hr />
                <div class="details-meta mb-3">
                    <strong>Book ID:</strong> @Model.Id
                </div>
                <div class="details-meta mb-3">
                    <strong>Authors:</strong>
                    @if (Model.Authors != null && Model.Authors.Count > 0)
                    {
                        @string.Join(", ", Model.Authors)
                    }
                    else
                    {
                        <span>No authors available</span>
                    }
                </div>
                <div class="details-meta mb-3">
                    <strong>Categories:</strong>
                    @if (Model.Categories != null && Model.Categories.Count > 0)
                    {
                        @string.Join(", ", Model.Categories)
                    }
                    else
                    {
                        <span>No categories available</span>
                    }
                </div>
                <div class="details-summary">
                    <h5>Summary</h5>
                    <p>
                        @if (!string.IsNullOrEmpty(Model.Summary))
                        {
                            @Model.Summary
                        }
                        else
                        {
                            <span>No summary available for this book.</span>
                        }
                    </p>
                </div>
            </div>
        </div>
        <!-- Loan Section -->
        <div class="col-md-4">
            <div class="loan-form">
                <h5>Loan this Book</h5>
                <form method="post" asp-action="MakeLoan" asp-controller="Loan">
                    <input type="hidden" name="BookId" value="@Model.Id" />
                    <div class="mb-3">
                        <label for="LoanDate" class="form-label">Loan Date</label>
                        <input type="date" id="LoanDate" name="LoanDate" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="DueDate" class="form-label">Due Date</label>
                        <input type="date" id="DueDate" name="DueDate" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-success">Loan</button>
                </form>
            </div>

            <div class="loan-history mt-5">
                <h5>Loan status</h5>
                @if (ViewBag.LoanDates != null && ViewBag.LoanDates.Count > 0)
                {
                    // Find the loan record without a return date or with a null return date
                    var lastLoan = (dynamic)null;
                    foreach (var loan in ViewBag.LoanDates)
                    {
                        if (string.IsNullOrEmpty(loan.ReturnDate) || loan.ReturnDate == "N/A")
                        {
                            lastLoan = loan;
                            break;
                        }
                    }
                    if (lastLoan != null)
                    {
                        bool isAvailable = lastLoan.ReturnDate != "N/A" && DateTime.Parse(lastLoan.ReturnDate) >= DateTime.Today;
                        <ul class="list-group">
                            <li class="list-group-item">
                                <strong>Loan Date:</strong> @lastLoan.LoanDate<br />
                                <strong>Due Date:</strong> @lastLoan.DueDate<br />
                                <strong>Return Date:</strong> @lastLoan.ReturnDate<br />
                                <strong>Status:</strong> @(isAvailable ? "Available" : "Unavailable")
                            </li>
                        </ul>
                    }
                    else
                    {
                        <p>Ready to loan.</p>
                    }
                }
                else
                {
                    <p>Ready to loan.</p>
                }
            </div>



        </div>
    </div>

    <!-- Add Review Form and Reviews Section -->
    <div class="row mt-5">
        <div class="col-md-6">
            <!-- Add Review Form -->
            <div class="add-review-form mb-5">
                <h5>Add a Review</h5>
                <form method="post" asp-action="AddReview" asp-controller="Book">
                    <input type="hidden" name="BookId" value="@Model.Id" />
                    <div class="mb-3">
                        <label for="Rating" class="form-label">Rating (1-5)</label>
                        <input type="number" id="Rating" name="Rating" class="form-control" min="1" max="5" required />
                    </div>
                    <div class="mb-3">
                        <label for="Comment" class="form-label">Comment</label>
                        <textarea id="Comment" name="Comment" class="form-control" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>
            </div>
        </div>
        <div class="col-md-6">
            <!-- Reviews Section -->
            <div class="reviews-section mb-5"> 
                <h5>Reviews</h5>
                @if (Model.Reviews != null && Model.Reviews.Count > 0)
                {
                    <ul class="list-group">
                        @foreach (var review in Model.Reviews)
                        {
                            <li class="list-group-item">
                                <strong>User:</strong> @review.UserName<br />
                                <strong>Rating:</strong> @review.Rating / 5<br />
                                
                                <strong>Comment:</strong> @review.Comment
                                @if (ViewBag.UserRole == 1 || ViewBag.UserRole == 2 || (ViewBag.UserId != null && review.UserId == int.Parse(ViewBag.UserId)))
                                {
                                    <form method="post" asp-action="DeleteReview" asp-controller="Book" class="d-inline-block ms-3">
                                        <input type="hidden" name="ReviewId" value="@review.Id" />
                                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                    </form>
                                }
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>No reviews yet for this book.</p>
                }
            </div>


            <!-- Back Button -->
            <div class="mt-4">
                <a href="@Url.Action("Books", "Book")" class="btn btn-outline-primary px-4 rounded-pill shadow-sm">
                    <i class="bi bi-arrow-left"></i> Back to Books
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    #book-details {
        margin: 0 auto;
        padding: 20px;
        max-width: 100%;
    }

    .details-container {
        display: flex;
        flex-wrap: wrap;
        gap: 30px;
        justify-content: center;
        align-items: center;
    }

    .book-details-card {
        flex: 1;
        background-color: #f9f9f9;
        border-radius: 10px;
        overflow: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0;
    }

    .book-details-img {
        width: 75%;
        padding: 0px;
        margin: 0px;
        transition: transform 0.3s ease;
    }

    .book-details-card:hover .book-details-img {
        transform: scale(1.03);
    }

    .book-details-info {
        flex: 2;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background-color: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        color: #333;
        padding: 20px;
    }

    .details-title {
        font-size: 2rem;
        font-weight: bold;
        color: #007bff;
        margin-bottom: 15px;
    }

    .details-meta {
        font-size: 1rem;
        color: #555;
        margin-bottom: 10px;
        line-height: 1.6;
    }

        .details-meta strong {
            color: #333;
        }

    .details-summary h5 {
        font-size: 1.2rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .details-summary p {
        font-size: 0.95rem;
        color: #555;
        line-height: 1.6;
    }

    .loan-form {
        background-color: #f9f9f9;
        border-radius: 10px;
        padding: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .add-review-form{
        margin-left: 20px;
    }

</style>
